version: '3'
x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.1.4}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./sharedVol:/home/sharedVol
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
  networks:
    - localnet

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./sharedVol:/home/sharedVol
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - localnet

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always
    networks:
      - localnet

  pgAdmin:
    restart: always
    image: dpage/pgadmin4
    container_name: "dev-pgadmin"
    ports:
      - "8089:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: psut@admin.com
      PGADMIN_DEFAULT_PASSWORD: psut2022
    volumes:
      - ./sharedVol:/home/sharedVol
    networks:
      - localnet
  neo4j:
    image: neo4j:4.2.3-enterprise
    container_name: "neo-gds1.5"
    volumes:
      - $HOME/graph_data/my_data:/data
      - $HOME/graph_data/my_data:/var/lib/neo4j/import
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_AUTH=neo4j/1234
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
      - apoc.import.file.enabled=true
      # - NEO4J_dbms_memory_pagecache_size=4G
      # - NEO4j_dbms_memory_heap_initial__size=4G
      # - NEO4J_dbms_memory_heap_max__size=8G
    networks:
      - localnet

  postgres_storage:
    restart: always
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: psut
      POSTGRES_PASSWORD: psut2022
      POSTGRES_DB: csv_db
    volumes:
      - ./pgvol:/var/lib/postgresql/data
      - ./sharedVol:/home/sharedVol
    networks:
      - localnet

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: psut
      MONGO_INITDB_ROOT_PASSWORD: psut2022
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-db-vol:/data/db
      - ./sharedVol:/home/sharedVol
    container_name:   mongo-db

    networks:
      - localnet
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8088:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: psut
      ME_CONFIG_MONGODB_ADMINPASSWORD: psut2022
    container_name:   mongo-express

    networks:
      - localnet

  datascience-notebook:
    image:  jupyter/minimal-notebook #datascience-notebook
    #ontainer_name:  "ds-jupyter"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./sharedVol:/home/sharedVol

    environment:
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_TOKEN : "psut2022"

    ports:
      - "8886:8888"

    container_name:   ds-jupyter11

    links:
      - postgres_storage
      - mongo
      - neo4j
    networks:
      - localnet

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8087:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    restart: always

  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

  flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - 5555:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

volumes:
  postgres-db-volume:

networks:
  localnet:
    attachable: true